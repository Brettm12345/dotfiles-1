#! /bin/sh

# Get coords of the monitor
monitor_x="$(cat $HOME/.cache/ppd_sizes | cut -d' ' -f1)"
monitor_y="$(cat $HOME/.cache/ppd_sizes | cut -d' ' -f2)"
# Get the size of the monitor
monitor_width="$(cat $HOME/.cache/ppd_sizes | cut -d' ' -f3)"
monitor_height="$(cat $HOME/.cache/ppd_sizes | cut -d' ' -f4)"
# Panel size
pad_x="50"
pad_y="30"
height="50"
# Padding of the text in the panel
in_pad="30"
# Yes.
font="-*-metis-normal-*-*-*-11-*-*-*-*-*-*-*"

color_summary="#71c2af"
color_bg="#1d2a30"
color_fg="#c27171"

dismiss=3

TEMP_FILE=$(mktemp)
trap "rm $TEMP_FILE" INT
# No notifications on screen
echo "0" > $TEMP_FILE

sind -d -t $dismiss -f '%s^%b' |\
  # Reads the notifications line by line
  while read -r line; do
    active=$(cat $TEMP_FILE)
    active=$(( active + 1 ))
    echo $active > $TEMP_FILE
    summary=$(echo $line | awk -F^ '{print $1}')
    body=$(echo $line | awk -F^ '{print $2}')
    # No body, no space
    [ -n body ] && space=" "
    # To be precise
    text_width=$(txtw -f $font "${summary}${body}")
    width=$((2 * in_pad + text_width))
    bar_y=$(( monitor_y + monitor_height - active * (pad_y + height) ))
    bar_opts="-d -g ${width}x${height}+$((monitor_x + monitor_width - pad_x - width))+$bar_y -B $color_bg -f $font"
    # Show it and wait 3 seconds
    (echo "%{c}%{F$color_summary}${summary}${space}%{F$color_fg}${body}"; sleep $dismiss; current=$(cat $TEMP_FILE); echo "$((current - 1))" > $TEMP_FILE) | lemonbar ${bar_opts} &
  done
