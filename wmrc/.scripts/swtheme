#!/bin/sh
#
# swtheme - switch theme
# (c) tudurom 2017 - wtfpl
# WARNING: EXPECT EXTREME HACKS
#

usage() {
	echo "Usage: $(basename $0) <colorscheme>" >&2
	exit 1
}

mst() {
	mustache < "$HOME/.wm/templates/$1" > "$HOME/$2"
}

pg() {
	pgrep "$1" > /dev/null
}

test -z "$1" && usage

. $HOME/bin/mustache.sh

colorscheme="$1"

test -f "$HOME/.xres/colors/$colorscheme" || \
	(echo "$(basename $0): color scheme not found" >&2 && exit 1)

# change terminal colors
changecolors "$HOME/.xres/colors/$colorscheme"

test -f "$HOME/.wm/themes/$colorscheme" || exit 0

echo "$colorscheme" > "$CURRENT_THEME_PATH"
. $HOME/bin/wmrc

# Set font
for term in /dev/pts/[0-9]*; do
	printf '\33]50;%s\007' "$TERM_FONT" > "$term"
done

# Execute templates

# X resources
_xres_font="$TERM_FONT"
_xres_colorscheme="$colorscheme"
mst xres_vars .xres/vars
unset _xres_font
unset _xres_colorscheme
xrdb "$HOME/.Xresources"

# Vimperator
_vimperator_colorscheme="$colorscheme"
mst vimperatorrc .vimperatorrc
unset _vimperator_colorscheme

_interrobang_font="fixed"
mst interrobang .interrobangrc
unset _interrobang_font

set -x

# TODO : find way to set this on the fly
sed -i 's/set background=.*/set background='"$COLOR_STYLE"'/' "$(readlink -f "$HOME/.config/nvim/init.vim")"

# Change firefox theme
firefox_profile="$(grep Path $HOME/.mozilla/firefox/profiles.ini | cut -d'=' -f2 | head -n 1)"
rainbou "$colorscheme" "$HOME/.wm/rainbou/templates/firefox_${COLOR_STYLE}" > "$HOME/.mozilla/firefox/$firefox_profile/chrome/userChrome.css"

# Regenerate startpage
wd=`pwd`
cd $HOME/dotfiles/startpage/scss
rainbou "$colorscheme" scss > colors.scss
cd ..
./gencss
cd "$wd"

wall-e "$WALLPAPER_PATH" "$WALLPAPER_STYLE"

# reload wm
pg windowchef && $HOME/.config/windowchef/windowchefrc
pg bspwm && $HOME/.config/bspwm/bspwmrc
pg herbstluftwm && herbstclient reload


# reload panel
pg minbar && killall minbar
minbar > /dev/null &
# Put the most raised window that is not ignored on the
# top of the stack, to stay above the panel.
# When other windows are focused, they are raised automatically
# by the wm, so no need to raise those.

# find minbar's wid
sleep 0.3
minbar_wid="$(
lsw -a | while read -r wid; do
	if [ "$(wname "$wid")" = "minbar" ]; then
		echo "$wid"
		break
	fi
done
)"
echo "$minbar_wid"
test -n "$minbar_wid" && chwso -l "$minbar_wid"
pg notifyd && killall notifyd
notifyd > /dev/null &


# I don't know why but notifyd wants a break
sleep 0.3

echo -e "%{F$PANEL_ACCENT_COLOR}î€®%{F-} Theme '$colorscheme' loaded." > /tmp/notifyd.fifo
